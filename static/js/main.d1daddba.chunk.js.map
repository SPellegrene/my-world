{"version":3,"sources":["Home/Home.js","Who/Who.js","Pie/Pie.js","What/What.js","Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["home","props","className","who","pie","what","header","id","App","state","isTop","onScroll","bind","document","addEventListener","window","scrollY","console","log","this","setState","getElementById","classList","toggle","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qXAwCeA,G,YApCF,SAACC,GAGZ,OACE,6BACE,yBAAKC,UAAU,MACb,wBAAIA,UAAU,oBAAd,UACA,wBAAIA,UAAU,qBAAd,gCAEA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBAGnB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBAGlB,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBAGnB,yBAAKA,UAAU,cCTRC,G,MArBH,WACV,OACE,yBAAKD,UAAU,iBACb,wBAAIA,UAAU,gBAAd,QACA,wBAAIA,UAAU,mBAAd,mEACA,uBAAGA,UAAU,+BAAb,8DACA,uBAAGA,UAAU,yBAAb,kNAEA,uBAAGA,UAAU,yBAAb,+GACA,wBAAIA,UAAU,yBAAd,cACA,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,YACb,2CACA,uBAAGA,UAAU,SAAb,6BAEF,yBAAKA,UAAU,kBCsBRE,G,YArCH,WACV,OACE,yBAAKF,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eAAf,QAIF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBAAf,QAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,sBAAf,QAIF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBAAf,QAIF,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,yBAAf,QAIF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eAAf,WCbOG,EAdF,WACX,OACE,yBAAKH,UAAU,uBACb,wBAAIA,UAAU,gBAAd,SACA,wBAAIA,UAAU,mBAAd,6EACA,uBAAGA,UAAU,+BAAb,sIAEA,yBAAKA,UAAU,8BACb,kBAAC,EAAD,SCAOI,G,MAXA,WACb,OACI,yBAAKC,GAAG,WACN,qCACA,mCACA,oCACA,uCC+COC,E,YA9Cb,WAAYP,GAAQ,IAAD,8BAClB,4CAAMA,KAEDQ,MAAQ,CACXC,OAAO,GAET,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBANE,E,iFAUC,IAAD,OAClBC,SAASC,iBAAiB,UAAU,WAClC,IAAMJ,EAAQK,OAAOC,QAAU,IAC3BN,IAAU,EAAKD,MAAMC,QACvB,EAAKC,SAASD,GACdO,QAAQC,IAAI,oB,+BAOTR,GACPS,KAAKC,SAAS,CAAEV,UAIAG,SAASQ,eAAe,WAChCC,UAAUC,OAAO,mB,+BAGhB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACAZ,SAAU,kBAAM,EAAKA,cAErB,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAzCUa,aCGEC,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASQ,eAAe,SD2H3C,kBAAmBU,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d1daddba.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\n\nconst home = (props) => {\n\n\n  return (\n    <div>\n      <div className=\"bg\">\n        <h1 className=\"heroHello fadeIn\">HELLO.</h1>\n        <h3 className=\"heroSlogan fadeIn\">Welcome to my web dev world.</h3>\n\n        <div className=\"mountain\">\n          <div className=\"mountain-top\">\n            <div className=\"mountain-cap-1\"></div>\n            <div className=\"mountain-cap-2\"></div>\n            <div className=\"mountain-cap-3\"></div>\n          </div>\n        </div>\n        <div className=\"mountain-two\">\n          <div className=\"mountain-top\">\n            <div className=\"mountain-cap-1\"></div>\n            <div className=\"mountain-cap-2\"></div>\n            <div className=\"mountain-cap-3\"></div>\n          </div>\n        </div>\n         <div className=\"mountain-three\">\n          <div className=\"mountain-top\">\n            <div className=\"mountain-cap-1\"></div>\n            <div className=\"mountain-cap-2\"></div>\n            <div className=\"mountain-cap-3\"></div>\n          </div>\n        </div>\n        <div className=\"cloud\"></div>\n    </div>\n  </div>\n  )\n}\n\nexport default home;\n","import React from 'react';\nimport './Who.css';\n\n\nconst who = () => {\n  return (\n    <div className=\"pageContainer\">\n      <h1 className=\"center white\">WHO.</h1>\n      <h2 className=\"center boxWidth\">Web Developer, CSS Junkie, Music Enthusiast and Mountain Biker.</h2>\n      <p className=\" desc center boxWidth white\">I like to live life to the fullest. It’s that simple.</p>\n      <p className=\" desc center boxWidth\">I have close to 3 years of development experience within a global corporation.\n      I’ve helped lead enhancement projects for billion dollar products and have impacted the lives of millions through my work.</p>\n      <p className=\" desc center boxWidth\">I’ve hiked a few mountains and have had my music played at festivals for thousands all over the world.</p>\n      <h2 className=\"center boxWidth white\">Who Am I ?</h2>\n      <div className=\"center sketchCont boxWidth\">\n        <div className=\"leftSide\">\n          <h3>Hi, I'm Sam</h3>\n          <p className=\"white\">(not actually this tall)</p>\n        </div>\n        <div className=\"rightSide\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default who;\n","import React from 'react';\nimport './Pie.css';\n\n\nconst pie = () => {\n  return (\n    <div className=\"pieCont\">\n      <div className=\"CSS\">\n        <div className=\"CSS-overlay\">\n          90%\n        </div>\n      </div>\n      <div className=\"HTML\">\n        <div className=\"HTML-overlay\">\n          99%\n        </div>\n      </div>\n      <div className=\"Javascript\">\n        <div className=\"Javascript-overlay\">\n          65%\n        </div>\n      </div>\n      <div className=\"React\">\n        <div className=\"React-overlay\">\n          50%\n        </div>\n      </div>\n      <div className=\"Accessibility\">\n        <div className=\"Accessibility-overlay\">\n          75%\n        </div>\n      </div>\n      <div className=\"RWD\">\n        <div className=\"RWD-overlay\">\n          85%\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default pie;\n","import React from 'react';\nimport './What.css';\nimport Pie from '../Pie/Pie';\n\n\n\nconst what = () => {\n  return (\n    <div className=\"pageContainer clear\">\n      <h1 className=\"center white\">WHAT.</h1>\n      <h2 className=\"center boxWidth\">I’m no expert, but I’m always challenging myself in new skills.</h2>\n      <p className=\" desc center boxWidth white\">For example, I designed and built this site in React.js.\nHere is what I’ve learned over the years and my proficiency levels :</p>\n      <div className=\"skillsCont center boxWidth\">\n        <Pie />\n      </div>\n    </div>\n  )\n}\n\nexport default what;\n","import React from 'react';\nimport './Header.css';\n\nconst header = () => {\n  return (\n      <nav id='wrapper'>\n        <li>INTRO</li>\n        <li>WHO</li>\n        <li>WHAT</li>\n        <li>WORK</li>\n      </nav>\n  )\n}\n\nexport default header;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home/Home';\nimport Who from './Who/Who';\nimport What from './What/What';\nimport Header from './Header/Header';\nimport Pie from './Pie/Pie';\n\n\nclass App extends Component {\n  constructor(props) {\n   super(props);\n\n   this.state = {\n     isTop: true\n   };\n   this.onScroll = this.onScroll.bind(this);\n }\n\n//Teaching computer how to detect scroll\n componentDidMount() {\n   document.addEventListener('scroll', () => {\n     const isTop = window.scrollY < 100;\n     if (isTop !== this.state.isTop) {\n       this.onScroll(isTop);\n       console.log('Scrolling!');\n     }\n\n   });\n }\n\n//Passing isTop logic into the onScroll function so it knows what isTop means\n onScroll(isTop) {\n   this.setState({ isTop });\n\n//Because onScroll is powered by isTop, which is only listening for a scroll,\n//tell the comp to add a class at the same time since we need the class to change on scroll.\n   const wrapper = document.getElementById('wrapper');\n   wrapper.classList.toggle('is-nav-scroll');\n }\n\n  render() {\n    return (\n      <div>\n        <Header\n        onScroll={() => this.onScroll()}\n        />\n        <Home\n         />\n        <Who />\n        <What />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}